{"version":3,"sources":["utils/apy.ts","config/config.ts","hooks/useTokenStats.tsx","hooks/useTimer.tsx","context/DashboardInfoContext.tsx","screens/Dashboard/Dashboard.tsx","screens/Account/Account.tsx","screens/Calculator/components/InputSide.tsx","screens/Calculator/components/ResultSide.tsx","screens/Calculator/Calculator.tsx","Routes.tsx","components/AppContainer/components/Body.tsx","assets/logos/logo.png","assets/icons/dashboard.svg","assets/icons/account.svg","assets/icons/calculator.svg","components/SideBar/SideBar.tsx","assets/icons/discord.svg","assets/icons/twitter.svg","assets/icons/telegram.svg","components/ShareIcons/ShareIcons.tsx","components/Drawer/Drawer.tsx","components/AppContainer/AppContainer.tsx","App.tsx","reportWebVitals.ts","utils/theme.ts","assets/fonts/LondrinaSolid-Black.ttf","assets/fonts/LondrinaSolid-Thin.ttf","index.tsx"],"names":["rewardYeild","compoundingFrequency","getApyRate","days","annualApy","apyRate","rate","Math","pow","REBASE_PER_DAY","i","TOKEN_ABI","CURRENT_CHAIN_ID","parseInt","process","TOKEN_ADDRESS","PAIR_ADDRESS","REBASE_RATE","APY","parseFloat","toFixed","DAY1_ROI","DAY5_ROI","useTokenStats","useEthers","account","token","useContract","busd","useERC20","lp","useUSDLp","useReload","reload","reloadable","useState","marketcap","setMarketcap","circulatingSupply","setCirculatingSupply","totalSupply","setTotalSupply","liquidityBacking","setLiquidityBacking","poolValue","setPoolValue","treasury","setTreasury","insuranceFund","setInsuranceFund","vault","setVault","vaultValue","setVaultValue","vaultSupply","setVaultSupply","price","setPrice","lastRebaseTime","setLastRebaseTime","timer","futureTime","timeFinished","setTimeFinished","hours","minutes","seconds","timeLeft","setTimeLeft","useEffect","interval","setInterval","now","Date","getTimeLeft","clearInterval","useTimer","lastReloadTime","setLastReloadTime","balanceUsd","setBalanceUsd","useERC20Balance","balance","displayBalance","nextRewardAmount","setNextRewardAmount","nextRewardAmountUSD","setnextRewardAmountUSD","day1Usd","setDay1Usd","day5Usd","setDay5Usd","petoAmount","setPetoAmount","apy","setApy","purchasePrice","setPurchasePrice","futurePrice","setFuturePrice","investmentDays","setInvestmentDays","initialInvestment","setInitialInvestment","currentWealth","setCurrentWealth","petoRewardsEstimation","setPetoRewardsEstimation","potentialReturns","setPotentialReturns","console","log","results","amount","currentPrice","investment","rewards","returns","calculateRewards","toNumber","fetch","a","baseTokenUsdPrice","_price","toBigNumber","_lastRebasedTime","toLowerUnit","getCirculatingSupply","_totalSupply","balanceOf","_pairBalance","_treasuryBalance","_insuranceFundBalance","_vaultBalance","getLiquidityBacking","_liquidityBacking","_circulatingSupply","minus","toFormat","times","div","_rewardAmount","_day1Usd","_day5Usd","dashboard","calculator","setMaxBalance","setCurrentAPY","setCurrentPurchasePrice","setCurrentFuturePrice","defaultInfo","BigNumber","DashboardInfoContext","createContext","DashboardInfoContextProvider","children","info","Provider","value","useDashboardInfo","useContext","useStyles","makeStyles","theme","root","width","height","display","alignItems","margin","card","padding","justifyContent","flexFlow","position","breakpoints","down","textAlign","payout","flexDirection","marginTop","tag","marginLeft","marginBottom","lineHeight","top","right","title","textTransform","Dashboard","classes","className","Container","maxWidth","Grid","container","spacing","item","xs","Typography","variant","fontWeight","mb","Card","sm","align","Button","disableElevation","sx","toLocaleString","minimumIntegerDigits","useGrouping","mt","pl","style","textRow","flexWrap","marginRight","textRowKey","gap","minHeight","fontSize","Account","md","lg","component","boxShadow","textarea","background","palette","secondary","main","InputSide","TextField","onChange","e","target","fullWidth","type","InputProps","endAdornment","onClick","zIndex","paddingTop","ResultSide","Slider","_","v","color","valueLabelDisplay","defaultValue","max","valueLabelFormat","paddingBottom","head","Calculator","Routes","path","element","gridTemplateRows","linksContainer","leftLinks","links","cursor","borderRadius","connect","Body","setOpen","useWallet","displayAccount","focusRipple","clsx","paddingLeft","itemText","letterSpacing","itemIcon","transform","activeItem","content","left","SideBar","handleClose","navigate","useNavigate","location","useLocation","handleNavigate","undefined","src","Logo","alt","pathname","DashboardIcon","includes","AccountIcon","CalculatorIcon","ShareIcons","href","TelegramIcon","DiscordIcon","TwitterIcon","iconsContainer","bottom","TemporaryDrawer","React","state","setState","toggleDrawer","anchor","open","event","key","id","Drawer","onClose","bodyWrapper","overflowY","borderBottomLeftRadius","sideWrapper","AppContainer","App","library","useEagerConnect","config","provider","rpcUrl","wrappedNative","address","symbol","name","decimals","usd","nativeUsdLp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","primaryColor","secondaryColor","createTheme","primary","text","values","xl","typography","fontFamily","components","MuiButton","styleOverrides","minWidth","border","contained","outlined","MuiTypography","variants","props","MuiIconButton","fill","MuiCard","borderWidth","borderColor","MuiDrawer","paper","MuiSvgIcon","colorPrimary","MuiTextField","backgroundColor","MuiSlider","thumbColorPrimary","track","rail","valueLabel","MuiCssBaseline","textDecoration","responsiveFontSizes","ReactDOM","render","StrictMode","chainId","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9b457361.chunk.js","sourcesContent":["import { REBASE_PER_DAY } from \"src/config/config\";\r\n\r\nexport const getTokenApy = (rewardYeild: number, compoundingFrequency: number) => {\r\n  return Math.pow(1 + rewardYeild, compoundingFrequency);\r\n};\r\n\r\nexport const getApyRate = (days: number, annualApy: number) => {\r\n  let apyRate = 1;\r\n  const rate = Math.pow(annualApy, 1 / (REBASE_PER_DAY * 365)) - 1;\r\n  for (let i = 0; i < REBASE_PER_DAY * days; i++) {\r\n    apyRate += apyRate * rate;\r\n  }\r\n  return apyRate;\r\n};\r\n\r\nexport const calculateRewards = (\r\n  amount: number,\r\n  annualApy: number,\r\n  currentPrice: number,\r\n  purchasePrice: number,\r\n  futurePrice: number,\r\n  days: number\r\n) => {\r\n  const apy = getApyRate(days, annualApy / 100);\r\n  return {\r\n    investment: amount * purchasePrice,\r\n    currentWealth: amount * currentPrice,\r\n    rewards: amount * apy,\r\n    returns: amount * apy * futurePrice,\r\n  };\r\n};\r\n","import { getApyRate, getTokenApy } from \"src/utils/apy\";\r\nimport TokenAbi from \"../assets/abi/petoverse_token_abi.json\";\r\n\r\nexport const TOKEN_ABI = TokenAbi;\r\n\r\nexport const CURRENT_CHAIN_ID = parseInt(process.env.REACT_APP_CHAIN_ID as string);\r\nexport const TOKEN_ADDRESS = process.env.REACT_APP_TOKEN_ADDRESS as string;\r\nexport const PAIR_ADDRESS = process.env.REACT_APP_PAIR_ADDRESS as string;\r\nexport const TREASURY_ADDRESS = process.env.REACT_APP_TREASURY_ADDRESS as string;\r\nexport const INSURANCE_FUND_ADDRESS = process.env.REACT_APP_INSURANCE_FUND_ADDRESS as string;\r\nexport const VAULT_ADDRESS = process.env.REACT_APP_VAULT_ADDRESS as string;\r\nexport const BUSD_ADDRESS = process.env.REACT_APP_BUSD_ADDRESS as string;\r\nexport const REBASE_RATE = 0.0009998;\r\nexport const REBASE_PER_DAY = 24;\r\n\r\nexport const APY = parseFloat((getTokenApy(REBASE_RATE, REBASE_PER_DAY * 365) * 100).toFixed(2));\r\nexport const DAY1_ROI = getApyRate(1, APY);\r\nexport const DAY5_ROI = getApyRate(5, APY);\r\n","import {\r\n  useContract,\r\n  useUSDLp,\r\n  toBigNumber,\r\n  toLowerUnit,\r\n  useEthers,\r\n  useERC20,\r\n  useERC20Balance,\r\n  useReload,\r\n} from \"@react-dapp/utils\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  APY,\r\n  BUSD_ADDRESS,\r\n  DAY1_ROI,\r\n  DAY5_ROI,\r\n  INSURANCE_FUND_ADDRESS,\r\n  PAIR_ADDRESS,\r\n  REBASE_RATE,\r\n  TOKEN_ABI,\r\n  TOKEN_ADDRESS,\r\n  TREASURY_ADDRESS,\r\n  VAULT_ADDRESS,\r\n} from \"src/config/config\";\r\nimport { DashboardInfo } from \"src/config/types\";\r\nimport { calculateRewards } from \"src/utils/apy\";\r\nimport { useTimer } from \"./useTimer\";\r\n\r\nexport const useTokenStats = (): DashboardInfo => {\r\n  const { account } = useEthers();\r\n  const token = useContract(TOKEN_ABI, TOKEN_ADDRESS);\r\n  const busd = useERC20(BUSD_ADDRESS);\r\n  const lp = useUSDLp(PAIR_ADDRESS);\r\n  const { reload, reloadable } = useReload();\r\n\r\n  // dashboard\r\n  const [marketcap, setMarketcap] = useState(\"0\");\r\n  const [circulatingSupply, setCirculatingSupply] = useState(\"0\");\r\n  const [totalSupply, setTotalSupply] = useState(\"0\");\r\n  const [liquidityBacking, setLiquidityBacking] = useState(\"0\");\r\n  const [poolValue, setPoolValue] = useState(\"0\");\r\n  const [treasury, setTreasury] = useState(\"0\");\r\n  const [insuranceFund, setInsuranceFund] = useState(\"0\");\r\n  const [vault, setVault] = useState(\"0\");\r\n  const [vaultValue, setVaultValue] = useState(\"0\");\r\n  const [vaultSupply, setVaultSupply] = useState(\"0\");\r\n  const [price, setPrice] = useState<BigNumber>();\r\n  const [lastRebaseTime, setLastRebaseTime] = useState(0);\r\n  const timer = useTimer(lastRebaseTime + 15 * 60);\r\n  const [lastReloadTime, setLastReloadTime] = useState(Date.now());\r\n\r\n  // account\r\n  const [balanceUsd, setBalanceUsd] = useState(\"0\");\r\n  const { balance, displayBalance } = useERC20Balance(TOKEN_ADDRESS, 5);\r\n  const [nextRewardAmount, setNextRewardAmount] = useState(\"0\");\r\n  const [nextRewardAmountUSD, setnextRewardAmountUSD] = useState(\"0\");\r\n  const [day1Usd, setDay1Usd] = useState(\"0\");\r\n  const [day5Usd, setDay5Usd] = useState(\"0\");\r\n\r\n  // CALCULATOR\r\n  // input values\r\n  const [petoAmount, setPetoAmount] = useState(0);\r\n  const [apy, setApy] = useState(APY);\r\n  const [purchasePrice, setPurchasePrice] = useState(\"0\");\r\n  const [futurePrice, setFuturePrice] = useState(\"0\");\r\n  const [investmentDays, setInvestmentDays] = useState(30);\r\n\r\n  // result values\r\n  const [initialInvestment, setInitialInvestment] = useState(\"0\");\r\n  const [currentWealth, setCurrentWealth] = useState(\"0\");\r\n  const [petoRewardsEstimation, setPetoRewardsEstimation] = useState(\"0\");\r\n  const [potentialReturns, setPotentialReturns] = useState(\"0\");\r\n\r\n  const setMaxBalance = () => setPetoAmount(parseFloat(displayBalance || \"0\"));\r\n  const setCurrentAPY = () => setApy(APY);\r\n  const setCurrentPurchasePrice = () => setPurchasePrice(price?.toFixed(2) || \"0\");\r\n  const setCurrentFuturePrice = () => setFuturePrice(price?.toFixed(2) || \"0\");\r\n\r\n  useEffect(() => {\r\n    if (timer.timeFinished && lastReloadTime + 1 * 60 * 1000 < Date.now()) {\r\n      setLastReloadTime(Date.now());\r\n      console.log(\"reload\");\r\n      reload();\r\n    }\r\n  }, [timer]);\r\n\r\n  useEffect(() => {\r\n    const results = calculateRewards(\r\n      petoAmount,\r\n      apy,\r\n      price?.toNumber() ?? 0,\r\n      parseFloat(purchasePrice),\r\n      parseFloat(futurePrice),\r\n      investmentDays\r\n    );\r\n    setInitialInvestment(results.investment.toFixed(2));\r\n    setCurrentWealth(results.currentWealth.toFixed(2));\r\n    setPetoRewardsEstimation(results.rewards.toFixed(2));\r\n    setPotentialReturns(results.returns.toFixed(2));\r\n  }, [petoAmount, apy, purchasePrice, futurePrice, investmentDays]);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      if (lp.baseTokenUsdPrice && token && busd) {\r\n        const _price = lp.baseTokenUsdPrice;\r\n        const _lastRebasedTime = toBigNumber(await token._lastRebasedTime()).toNumber();\r\n        const _totalSupply = toLowerUnit(toBigNumber(await token.getCirculatingSupply()).toFixed(), 5);\r\n        const _pairBalance = toLowerUnit(toBigNumber(await token.balanceOf(PAIR_ADDRESS)).toFixed(), 5);\r\n        const _treasuryBalance = toLowerUnit(toBigNumber(await token.balanceOf(TREASURY_ADDRESS)).toFixed(), 5);\r\n        const _insuranceFundBalance = toLowerUnit(\r\n          toBigNumber(await busd.balanceOf(INSURANCE_FUND_ADDRESS)).toFixed(),\r\n          18\r\n        );\r\n        const _vaultBalance = toLowerUnit(toBigNumber(await token.balanceOf(VAULT_ADDRESS)).toFixed(), 5);\r\n        const _liquidityBacking = toBigNumber(await token.getLiquidityBacking(100)).toFixed();\r\n        const _circulatingSupply = _totalSupply.minus(_pairBalance);\r\n        setLastRebaseTime(_lastRebasedTime);\r\n        setPrice(lp.baseTokenUsdPrice);\r\n        setPurchasePrice(lp.baseTokenUsdPrice.toFixed(2));\r\n        setFuturePrice(lp.baseTokenUsdPrice.toFixed(2));\r\n        setCirculatingSupply(_circulatingSupply.toFormat(0));\r\n        setTotalSupply(_totalSupply.toFormat(0));\r\n        setMarketcap(_circulatingSupply.times(_price).toFormat(0));\r\n        setLiquidityBacking(_liquidityBacking);\r\n        setTreasury(_treasuryBalance.times(_price).toFormat(0));\r\n        setInsuranceFund(_insuranceFundBalance.toFormat(0));\r\n        setVault(_vaultBalance.toFormat(0));\r\n        setVaultValue(_vaultBalance.times(_price).toFormat(0));\r\n        setVaultSupply(_vaultBalance.div(_totalSupply).times(100).toFormat(2));\r\n        setPoolValue(_pairBalance.times(_price).times(2).toFormat(0));\r\n      }\r\n    };\r\n    fetch();\r\n  }, [lp.baseTokenUsdPrice, token, busd, reloadable]);\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      if (balance && token && price) {\r\n        setBalanceUsd(toLowerUnit(balance?.times(price)?.toFixed(0) ?? \"0\", 5).toFormat(2));\r\n        const _rewardAmount = balance.times(REBASE_RATE).div(100);\r\n        const _day1Usd = balance.times(DAY1_ROI).div(100).times(price).toFormat(5);\r\n        const _day5Usd = balance.times(DAY5_ROI).div(100).times(price).toFormat(5);\r\n        setNextRewardAmount(_rewardAmount.toFixed(2));\r\n        setnextRewardAmountUSD(_rewardAmount.times(price).toFormat(5));\r\n        setDay1Usd(_day1Usd);\r\n        setDay5Usd(_day5Usd);\r\n      }\r\n    };\r\n    fetch();\r\n  }, [balance, token, price]);\r\n\r\n  return {\r\n    price: price?.toFormat(2),\r\n    timer,\r\n    dashboard: {\r\n      marketcap,\r\n      liquidityBacking,\r\n      circulatingSupply,\r\n      totalSupply,\r\n      treasury,\r\n      insuranceFund,\r\n      vault,\r\n      vaultValue,\r\n      vaultSupply,\r\n      poolValue,\r\n    },\r\n    account: {\r\n      balance,\r\n      displayBalance,\r\n      balanceUsd,\r\n      nextRewardAmount,\r\n      nextRewardAmountUSD,\r\n      day1Usd,\r\n      day5Usd,\r\n    },\r\n    calculator: {\r\n      setPetoAmount,\r\n      setApy,\r\n      setPurchasePrice,\r\n      setFuturePrice,\r\n      setInvestmentDays,\r\n      setMaxBalance,\r\n      setCurrentAPY,\r\n      setCurrentPurchasePrice,\r\n      setCurrentFuturePrice,\r\n      petoAmount,\r\n      apy,\r\n      purchasePrice,\r\n      futurePrice,\r\n      investmentDays,\r\n      initialInvestment,\r\n      currentWealth,\r\n      petoRewardsEstimation,\r\n      potentialReturns,\r\n    },\r\n  };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getTimeLeft } from \"@react-dapp/utils\";\r\n\r\nexport const useTimer = (futureTime: number) => {\r\n  const [timeFinished, setTimeFinished] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState<{\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n  }>({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now() / 1000;\r\n      if (now < futureTime) {\r\n        setTimeLeft(\r\n          getTimeLeft(futureTime - now) ?? {\r\n            days: 0,\r\n            hours: 0,\r\n            minutes: 0,\r\n            seconds: 0,\r\n          }\r\n        );\r\n        setTimeFinished(false);\r\n      } else {\r\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n        setTimeFinished(true);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [futureTime]);\r\n\r\n  return { timeFinished, timeLeft };\r\n};\r\n","import BigNumber from \"bignumber.js\";\r\nimport { useContext, createContext } from \"react\";\r\nimport { DashboardInfo } from \"src/config/types\";\r\nimport { useTokenStats } from \"src/hooks/useTokenStats\";\r\n\r\nconst defaultInfo: DashboardInfo = {\r\n  price: \"0\",\r\n  timer: {\r\n    timeFinished: false,\r\n    timeLeft: {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n    },\r\n  },\r\n  account: {\r\n    balance: new BigNumber(0),\r\n    balanceUsd: \"0\",\r\n    displayBalance: \"0\",\r\n    day1Usd: \"0\",\r\n    day5Usd: \"0\",\r\n    nextRewardAmount: \"0\",\r\n    nextRewardAmountUSD: \"0\",\r\n  },\r\n  dashboard: {\r\n    circulatingSupply: \"0\",\r\n    insuranceFund: \"0\",\r\n    liquidityBacking: \"0\",\r\n    marketcap: \"\",\r\n    poolValue: \"0\",\r\n    totalSupply: \"0\",\r\n    treasury: \"0\",\r\n    vault: \"0\",\r\n    vaultSupply: \"0\",\r\n    vaultValue: \"0\",\r\n  },\r\n  calculator: {\r\n    setPetoAmount: () => {},\r\n    setApy: () => {},\r\n    setPurchasePrice: () => {},\r\n    setFuturePrice: () => {},\r\n    setInvestmentDays: () => {},\r\n    setCurrentAPY: () => {},\r\n    setCurrentFuturePrice: () => {},\r\n    setCurrentPurchasePrice: () => {},\r\n    setMaxBalance: () => {},\r\n    apy: 0,\r\n    futurePrice: \"0\",\r\n    purchasePrice: \"0\",\r\n    investmentDays: 0,\r\n    petoAmount: 0,\r\n    initialInvestment: \"0\",\r\n    currentWealth: \"0\",\r\n    petoRewardsEstimation: \"0\",\r\n    potentialReturns: \"0\",\r\n  },\r\n};\r\n\r\nconst DashboardInfoContext = createContext<DashboardInfo>(defaultInfo);\r\n\r\nconst DashboardInfoContextProvider = ({ children }: { children: JSX.Element }) => {\r\n  const info = useTokenStats();\r\n\r\n  return <DashboardInfoContext.Provider value={info}>{children}</DashboardInfoContext.Provider>;\r\n};\r\n\r\nexport { DashboardInfoContext, DashboardInfoContextProvider };\r\n\r\nexport const useDashboardInfo = () => {\r\n  return useContext(DashboardInfoContext);\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Button, Card, Container, Grid, Theme, Typography } from \"@mui/material\";\r\nimport { useDashboardInfo } from \"../../context/DashboardInfoContext\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: \"0 auto\",\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    padding: \"5% 2.5%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-start\",\r\n    flexFlow: \"column\",\r\n    position: \"relative\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  payout: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"20px\",\r\n  },\r\n  tag: {\r\n    position: \"absolute\",\r\n    marginLeft: \"65%\",\r\n    padding: \"5px 20px\",\r\n    marginBottom: \"10px\",\r\n    lineHeight: \"20px\",\r\n    top: \"5%\",\r\n    right: \"2%\",\r\n  },\r\n  title: {\r\n    textTransform: \"uppercase\",\r\n    marginTop: \"26px\",\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst Dashboard: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n  const {\r\n    price,\r\n    timer,\r\n    dashboard: {\r\n      marketcap,\r\n      circulatingSupply,\r\n      totalSupply,\r\n      liquidityBacking,\r\n      insuranceFund,\r\n      treasury,\r\n      vault,\r\n      vaultValue,\r\n      vaultSupply,\r\n      poolValue,\r\n    },\r\n  } = useDashboardInfo();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" textAlign=\"center\" fontWeight=\"bold\" mb={1}>\r\n              GENERAL OVERVIEW\r\n            </Typography>\r\n            <Card className={classes.card}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={3}>\r\n                  <Typography className={classes.title} variant=\"h6\" align=\"center\">\r\n                    MARKET CAP\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" fontWeight={100} align=\"center\">\r\n                    $ {marketcap}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <Typography className={classes.title} variant=\"h6\" align=\"center\">\r\n                    CIRCULATING SUPPLY\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" fontWeight={100} align=\"center\">\r\n                    $ {circulatingSupply}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <Typography className={classes.title} variant=\"h6\" align=\"center\">\r\n                    $BABES PRICE\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" fontWeight={100} align=\"center\">\r\n                    $ {price}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                  <Typography className={classes.title} variant=\"h6\" align=\"center\">\r\n                    Total Supply\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" fontWeight={100} align=\"center\">\r\n                    {totalSupply} $BABES\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n          <Grid container spacing={4} marginTop={2}>\r\n            <Grid item xs={12} className={classes.payout}>\r\n              <Typography textAlign=\"center\" fontWeight=\"bold\" textTransform={\"uppercase\"} mb={1}>\r\n                Next Payout\r\n              </Typography>\r\n              <Button variant=\"contained\" disableElevation sx={{ padding: \"5px 45px\" }}>\r\n                {timer.timeLeft.hours.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}:\r\n                {timer.timeLeft.minutes.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}:\r\n                {timer.timeLeft.seconds.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant={\"h5\"} textAlign=\"center\" width=\"100%\" fontWeight=\"bold\" mt={7}>\r\n            VAULT STATS\r\n          </Typography>\r\n          <Grid container spacing={2} marginTop={1} pl={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <Card className={classes.card}>\r\n                {/* <Button variant=\"contained\" disableElevation className={classes.tag}>\r\n                  +3.45%\r\n                </Button> */}\r\n                <Typography className={classes.title} variant=\"h6\" textAlign={\"left\"}>\r\n                  Pool Value\r\n                </Typography>\r\n                <Typography variant=\"h4\" fontWeight={100} style={{ marginTop: 1, marginBottom: 2 }}>\r\n                  $ {poolValue}\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Card className={classes.card}>\r\n                {/* <Button variant=\"contained\" disableElevation className={classes.tag}>\r\n                  +3.45%\r\n                </Button> */}\r\n                <Typography className={classes.title} variant=\"h6\" textAlign={\"left\"}>\r\n                  Vault Supply\r\n                </Typography>\r\n                <Typography variant=\"h4\" fontWeight={100} style={{ marginTop: 1, marginBottom: 2 }}>\r\n                  {vault} $BABES\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Card className={classes.card}>\r\n                {/* <Button variant=\"contained\" disableElevation className={classes.tag}>\r\n                  +3.45%\r\n                </Button> */}\r\n                <Typography variant=\"h6\" className={classes.title} textAlign={\"left\"}>\r\n                  Vault Value USD\r\n                </Typography>\r\n                <Typography variant=\"h4\" fontWeight={100} style={{ marginTop: 1, marginBottom: 2 }}>\r\n                  $ {vaultValue}\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Button, Card, Container, Grid, Theme, Typography } from \"@mui/material\";\r\nimport { useDashboardInfo } from \"src/context/DashboardInfoContext\";\r\nimport { APY, DAY1_ROI, REBASE_RATE } from \"src/config/config\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"100%\",\r\n    margin: \"20px auto 0 auto\",\r\n  },\r\n  textRow: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 10,\r\n    marginRight: 80,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  textRowKey: {\r\n    fontWeight: 200,\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    justifyContent: \"space-between\",\r\n    gap: 90,\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    minHeight: 120,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      gap: 20,\r\n    },\r\n  },\r\n  title: {\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst data = [\r\n  [\"Current $BABES Price\", \"$147.50\"],\r\n  [\"Next Reward Amount\", \"0 $BABES\"],\r\n  [\"Next Reward Amount USD\", \"$0\"],\r\n  [\"Next Reward Yield\", \"Next Reward Yield\"],\r\n  [\"ROI (30-Day Rate)\", \"11.96%\"],\r\n  [\"ROI (30-Day Rate) USD\", \"$0\"],\r\n  // [\"ROI(5-Day Rate) USD\", \"$0\"],\r\n];\r\n\r\nconst Account: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n  const {\r\n    timer,\r\n    price,\r\n    account: { balanceUsd, displayBalance, day1Usd, day5Usd, nextRewardAmount, nextRewardAmountUSD },\r\n  } = useDashboardInfo();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} sm={12}>\r\n            <Card className={classes.card}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"h5\" className={classes.title}>\r\n                    <b>Total Earned</b>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"thin\">$0</Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography>\r\n                    <b>$800,000 $BABES (4500% INCREASE)</b>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n            <Card className={classes.card}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"h5\" className={classes.title}>\r\n                    APY\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"thin\">\r\n                    {APY.toLocaleString()} %\r\n                    <br />\r\n                    <b>Daily ROI {DAY1_ROI.toFixed(2)} %</b>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Typography>\r\n                    Your Balance\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Button variant=\"contained\" sx={{ padding: \"2px 15px\", fontSize: \"1rem\" }}>\r\n                    <b>$ {balanceUsd}</b>\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Typography>\r\n                    <b>{displayBalance} $BABES</b>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Card className={classes.card}>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"h5\" className={classes.title}>\r\n                    Next Payout\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Typography variant=\"thin\">\r\n                    {timer.timeLeft.hours.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}:\r\n                    {timer.timeLeft.minutes.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}:\r\n                    {timer.timeLeft.seconds.toLocaleString(\"en-US\", { minimumIntegerDigits: 2, useGrouping: false })}\r\n                    <br />\r\n                    <Typography component={'span'}>Interest Coming in your wallet</Typography>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Typography>\r\n                    Your next earnings\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Button variant=\"contained\" sx={{ padding: \"2px 15px\", fontSize: \"1rem\" }}>\r\n                    {nextRewardAmountUSD} $\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={4}>\r\n                  <Typography>\r\n                    <b>{nextRewardAmount} $BABES</b>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Card>\r\n              <Grid container>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    Current $BABES Price\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{price}$</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    Next Reward Amount\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{nextRewardAmount} $BABES</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    Next Reward Amount USD\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{nextRewardAmountUSD} $</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    Next Reward Yield\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{(REBASE_RATE * 100).toFixed(5)} %</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    ROI (30-Day Rate)\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{day1Usd} $</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={5} className={classes.textRow}>\r\n                  <Typography className={classes.textRowKey}>\r\n                    ROI (30-Day Rate) USD\r\n                  </Typography>\r\n                  <Typography variant=\"thin\">{day5Usd} $</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Button, Card, Grid, TextField, Theme, Typography } from \"@mui/material\";\r\nimport { useDashboardInfo } from \"../../../context/DashboardInfoContext\";\r\nimport { APY } from \"src/config/config\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {},\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexFlow: \"column\",\r\n    minHeight: 100,\r\n    boxShadow: \"none\",\r\n  },\r\n  textarea: {\r\n    background: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst InputSide: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n  const {\r\n    price,\r\n    account: { displayBalance },\r\n    calculator: {\r\n      setApy,\r\n      setFuturePrice,\r\n      setPetoAmount,\r\n      setPurchasePrice,\r\n      setCurrentAPY,\r\n      setCurrentFuturePrice,\r\n      setCurrentPurchasePrice,\r\n      setMaxBalance,\r\n      apy,\r\n      futurePrice,\r\n      petoAmount,\r\n      purchasePrice,\r\n    },\r\n  } = useDashboardInfo();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} sm={6} md={6} lg={4}>\r\n          <Card className={classes.card}>\r\n            <Typography variant=\"h6\" textTransform={\"uppercase\"} textAlign=\"center\">\r\n              $BABES price\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight={100}>\r\n              ${price}\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={4}>\r\n          <Card className={classes.card}>\r\n            <Typography variant=\"h6\" textTransform={\"uppercase\"} textAlign=\"center\">\r\n              APY\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight={100}>\r\n              {APY.toLocaleString()} %\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12} lg={4}>\r\n          <Card className={classes.card}>\r\n            <Typography variant=\"h6\" textTransform={\"uppercase\"} textAlign=\"center\">\r\n              Your $BABES balance\r\n            </Typography>\r\n            <Typography variant=\"h4\" fontWeight={100}>\r\n              $ {displayBalance}\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={6} sx={{ mb: 0 }}>\r\n          <Typography style={{ marginBottom: 10, fontWeight: 600 }} textTransform={\"uppercase\"} textAlign=\"center\">\r\n            $BABES Amount\r\n          </Typography>\r\n          <TextField\r\n            value={petoAmount}\r\n            onChange={(e) => setPetoAmount(parseFloat(e.target.value))}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button onClick={setMaxBalance} sx={{ zIndex: 100 }}>\r\n                  <b>Max</b>\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{ mb: 0 }}>\r\n          <Typography style={{ marginBottom: 10, fontWeight: 600 }} textTransform={\"uppercase\"} textAlign=\"center\">\r\n            APY (%)\r\n          </Typography>\r\n          <TextField\r\n            value={apy}\r\n            onChange={(e) => setApy(parseFloat(e.target.value))}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button onClick={setCurrentAPY} sx={{ zIndex: 100 }}>\r\n                  <b>Current</b>\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{ mb: 0 }}>\r\n          <Typography style={{ marginBottom: 10, fontWeight: 600 }} textTransform={\"uppercase\"} textAlign=\"center\">\r\n            $BABES price at purchase ($)\r\n          </Typography>\r\n          <TextField\r\n            value={purchasePrice}\r\n            onChange={(e) => setPurchasePrice(e.target.value)}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button onClick={setCurrentPurchasePrice} sx={{ zIndex: 100 }}>\r\n                  <b>Current</b>\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} sx={{ mb: 0 }}>\r\n          <Typography style={{ marginBottom: 10, fontWeight: 600 }} textTransform={\"uppercase\"} textAlign=\"center\">\r\n            Future $BABES price ($)\r\n          </Typography>\r\n          <TextField\r\n            value={futurePrice}\r\n            onChange={(e) => setFuturePrice(e.target.value)}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"number\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <Button onClick={setCurrentFuturePrice} sx={{ zIndex: 100 }}>\r\n                  <b>Current</b>\r\n                </Button>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputSide;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Slider, Theme, Typography } from \"@mui/material\";\r\nimport { useDashboardInfo } from \"../../../context/DashboardInfoContext\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    paddingTop: 30,\r\n  },\r\n  textRow: {\r\n    maxWidth: \"500px\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 10,\r\n  },\r\n  textRowKey: {\r\n    fontWeight: 200,\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst ResultSide: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n  const {\r\n    calculator: {\r\n      currentWealth,\r\n      initialInvestment,\r\n      petoRewardsEstimation,\r\n      potentialReturns,\r\n      investmentDays,\r\n      setInvestmentDays,\r\n    },\r\n  } = useDashboardInfo();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        value={investmentDays}\r\n        onChange={(_, v) => setInvestmentDays(v as number)}\r\n        color=\"primary\"\r\n        valueLabelDisplay=\"on\"\r\n        defaultValue={30}\r\n        max={365}\r\n        valueLabelFormat={(value) => value + \" Days\"}\r\n      />\r\n      <div style={{ marginTop: 20 }}>\r\n        <div className={classes.textRow}>\r\n          <Typography className={classes.textRowKey}>\r\n            Your initial investment\r\n          </Typography>\r\n          <Typography variant=\"thin\">${initialInvestment}</Typography>\r\n        </div>\r\n        <div className={classes.textRow}>\r\n          <Typography className={classes.textRowKey}>\r\n            Current wealth\r\n          </Typography>\r\n          <Typography variant=\"thin\">${currentWealth}</Typography>\r\n        </div>\r\n        <div className={classes.textRow}>\r\n          <Typography className={classes.textRowKey}>\r\n            $BABES rewards estimation\r\n          </Typography>\r\n          <Typography variant=\"thin\">{petoRewardsEstimation} $BABES</Typography>\r\n        </div>\r\n        <div className={classes.textRow}>\r\n          <Typography className={classes.textRowKey}>\r\n            Potential return\r\n          </Typography>\r\n          <Typography variant=\"thin\">${potentialReturns}</Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultSide;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Container, Grid, Theme, Typography, Card } from \"@mui/material\";\r\nimport InputSide from \"./components/InputSide\";\r\nimport ResultSide from \"./components/ResultSide\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    paddingBottom: 50,\r\n    marginTop: 30\r\n  },\r\n  head: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: \"column\"\r\n    }\r\n  }\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst Calculator: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\">\r\n        <div className={classes.head}>\r\n          <Typography textAlign=\"center\" variant=\"h5\" style={{ marginRight: 20, textTransform: 'uppercase', fontWeight: '900' }}>\r\n            Calculator\r\n          </Typography>\r\n          <Typography textAlign=\"center\" variant=\"thin\" style={{lineHeight: '35px'}}>Estimate your returns</Typography>          \r\n        </div>\r\n        <Card>\r\n        <Container maxWidth=\"md\">\r\n        <form>\r\n          <Grid container spacing={2} style={{ marginTop: 0 }}>\r\n            <Grid item xs={12} sm={12}>\r\n              <InputSide />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <ResultSide />\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        </Container>\r\n        </Card>\r\n        \r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n\r\n","import React from \"react\";\r\nimport { Route, Routes as Switch } from \"react-router-dom\";\r\nimport Dashboard from \"src/screens/Dashboard/Dashboard\";\r\nimport Account from \"src/screens/Account/Account\";\r\nimport Calculator from \"src/screens/Calculator/Calculator\";\r\n\r\ninterface Props {}\r\n\r\nconst Routes: React.FC<Props> = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" element={<Dashboard />} />\r\n      <Route path=\"/account\" element={<Account />} />\r\n      <Route path=\"/calculator\" element={<Calculator />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Button, Container, Theme, Typography } from \"@mui/material\";\r\nimport Routes from \"src/Routes\";\r\nimport clsx from \"clsx\";\r\nimport { useWallet } from \"@react-dapp/wallet\";\r\nimport { useEthers } from \"@react-dapp/utils\";\r\nimport { useDashboardInfo } from \"src/context/DashboardInfoContext\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    maxWidth: \"90%\",\r\n    margin: \"0 auto\",\r\n    top: 16,\r\n    position: \"relative\",\r\n    display: \"grid\",\r\n    paddingBottom: 20,\r\n\r\n    gridTemplateRows: \"min-content 1fr\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      position: \"relative\",\r\n      top: 0,\r\n    },\r\n  },\r\n  linksContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n    gap: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  leftLinks: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    gap: 20,\r\n  },\r\n  links: {\r\n    cursor: \"pointer\",\r\n    boxShadow: \"1px 1px 4px 1px rgba(255,255,255, 0.4)\",\r\n    borderRadius: \"12px\",\r\n  },\r\n  connect: {\r\n    padding: \"3px 15px\",\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst Body: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n  const { setOpen } = useWallet();\r\n  const { displayAccount } = useEthers();\r\n  const { price } = useDashboardInfo();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\" className={classes.linksContainer}>\r\n        <div className={classes.leftLinks}>\r\n          <Button variant=\"contained\" focusRipple={false} sx={{ padding: \"3px 40px\" }} className={classes.links}>\r\n            $BABES {price}\r\n          </Button>\r\n          <Button variant=\"outlined\" sx={{ padding: \"3px 40px\" }} className={classes.links}>\r\n            Buy on DexTools\r\n          </Button>\r\n          <Button variant=\"outlined\" sx={{ padding: \"3px 40px\" }} className={classes.links}>\r\n            Charts\r\n          </Button>\r\n        </div>\r\n        <Button onClick={() => setOpen(true)} variant=\"outlined\" className={clsx(classes.links, classes.connect)}>\r\n          {displayAccount ? displayAccount : \"Connect Wallet\"}\r\n        </Button>\r\n      </Container>\r\n      <Routes />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","export default __webpack_public_path__ + \"static/media/logo.e141a775.png\";","export default __webpack_public_path__ + \"static/media/dashboard.a93f66eb.svg\";","export default __webpack_public_path__ + \"static/media/account.46312db9.svg\";","export default __webpack_public_path__ + \"static/media/calculator.151996ac.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Theme, Typography } from \"@mui/material\";\r\nimport Logo from \"src/assets/logos/logo.png\";\r\nimport clsx from \"clsx\";\r\nimport DashboardIcon from \"src/assets/icons/dashboard.svg\";\r\nimport AccountIcon from \"src/assets/icons/account.svg\";\r\nimport CalculatorIcon from \"src/assets/icons/calculator.svg\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    gridTemplateRows: \"min-content 1fr\",\r\n    height: \"100vh\",\r\n    padding: '0 20px',\r\n  },\r\n  item: {\r\n    paddingLeft: 25,\r\n    textAlign: 'center',\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    cursor: \"pointer\",\r\n    marginBottom: 20,\r\n  },\r\n  itemText: {\r\n    fontSize: 18,\r\n    letterSpacing: 1,\r\n    fontWeight: 300,\r\n  },\r\n  itemIcon: {\r\n    marginRight: 10,\r\n    transform: \"translateY(3px)\",\r\n  },\r\n  activeItem: {\r\n    boxShadow: '1px 1px 7px 2px rgba(255,255,255, 0.4)',\r\n    borderRadius: 20,\r\n    position: \"relative\",\r\n    \"&:after\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      top: \"26%\",\r\n      left: 0,\r\n      height: \"54%\",\r\n      width: 4,\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  handleClose?: any;\r\n}\r\n\r\nconst SideBar: React.FC<Props> = ({ handleClose }) => {\r\n  const { classes } = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleNavigate = (path: string) => {\r\n    navigate(path);\r\n    handleClose && handleClose(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <img width=\"80%\" style={{ marginLeft: \"10%\" }} src={Logo} alt=\"petoverse\" />\r\n      <div style={{ height: \"100%\", paddingTop: 20 }}>\r\n        <div\r\n          className={clsx(classes.item, location.pathname === \"/\" && classes.activeItem)}\r\n          onClick={() => handleNavigate(\"/\")}\r\n        >\r\n          <Typography className={classes.itemText}>\r\n            <img src={DashboardIcon} className={classes.itemIcon} alt=\"dashboard\" /> Dashboard\r\n          </Typography>\r\n        </div>\r\n        <div\r\n          className={clsx(classes.item, location.pathname.includes(\"account\") && classes.activeItem)}\r\n          onClick={() => handleNavigate(\"/account\")}\r\n        >\r\n          <Typography className={classes.itemText}>\r\n            <img src={AccountIcon} className={classes.itemIcon} alt=\"account\" /> Account\r\n          </Typography>\r\n        </div>\r\n        <div\r\n          className={clsx(classes.item, location.pathname.includes(\"calculator\") && classes.activeItem)}\r\n          onClick={() => handleNavigate(\"/calculator\")}\r\n        >\r\n          <Typography className={classes.itemText}>\r\n            <img src={CalculatorIcon} className={classes.itemIcon} alt=\"calculator\" /> Calculator\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","export default __webpack_public_path__ + \"static/media/discord.3e26fa77.svg\";","export default __webpack_public_path__ + \"static/media/twitter.e88ba069.svg\";","export default __webpack_public_path__ + \"static/media/telegram.f6f19a8d.svg\";","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Theme, Typography } from \"@mui/material\";\r\nimport DiscordIcon from \"src/assets/icons/discord.svg\";\r\nimport YoutubeIcon from \"src/assets/icons/youtube.svg\";\r\nimport TwitterIcon from \"src/assets/icons/twitter.svg\";\r\nimport MediumIcon from \"src/assets/icons/medium.svg\";\r\nimport TelegramIcon from \"src/assets/icons/telegram.svg\";\r\nimport RedditIcon from \"src/assets/icons/reddit.svg\";\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: 20,\r\n    \"& img\": {\r\n      width: 25,\r\n      height: 25,\r\n    },\r\n  },\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst ShareIcons: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h6\" fontWeight={'bold'}>SOCIALS</Typography>\r\n      <a href=\"https://</div>www.google.com\">\r\n        <img src={TelegramIcon} alt=\"discord\" />\r\n      </a>\r\n      <a href=\"https://</div>www.google.com\">\r\n        <img src={DiscordIcon} alt=\"discord\" />\r\n      </a>\r\n      <a href=\"https://</div>www.google.com\">\r\n        <img src={TwitterIcon} alt=\"discord\" />\r\n      </a>\r\n      {/* <a href=\"https://</div>www.google.com\">\r\n        <img src={YoutubeIcon} alt=\"discord\" />\r\n      </a> */}\r\n      {/* <a href=\"https://</div>www.google.com\">\r\n        <img src={MediumIcon} alt=\"discord\" />\r\n      </a> */}\r\n      {/* <a href=\"https://</div>www.google.com\">\r\n        <img src={RedditIcon} alt=\"discord\" />\r\n      </a> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareIcons;\r\n","import * as React from \"react\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport ShareIcons from \"../ShareIcons/ShareIcons\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Theme } from \"@mui/material\";\r\n\r\n\r\ntype Anchor = \"top\" | \"left\" | \"bottom\" | \"right\";\r\n\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  iconsContainer: {\r\n    position: \"absolute\",\r\n    bottom: 50,\r\n    left: '20%',\r\n  }\r\n}))\r\n\r\nexport default function TemporaryDrawer() {\r\n  const {classes} = useStyles()\r\n\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor: Anchor, open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\r\n    if (\r\n      event?.type === \"keydown\" &&\r\n      ((event as React.KeyboardEvent).key === \"Tab\" || (event as React.KeyboardEvent).key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  return (\r\n    <div id=\"drawer\">\r\n      <span\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 10,\r\n          left: 10,\r\n          zIndex: 10,\r\n          height: 47,\r\n          width: 47,\r\n          background: \"rgba(0,0,0,0.8)\",\r\n          borderRadius: 5,\r\n        }}\r\n        className=\"center\"\r\n        onClick={toggleDrawer(\"left\", true)}\r\n      >\r\n        <MenuIcon color=\"primary\" fontSize=\"large\" />\r\n      </span>\r\n      <Drawer anchor={\"left\"} open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\r\n        <SideBar handleClose={toggleDrawer(\"left\", false)} />\r\n        <div className={classes.iconsContainer}>\r\n          <ShareIcons />\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"tss-react/mui\";\r\nimport { Theme } from \"@mui/material\";\r\nimport Body from \"./components/Body\";\r\nimport SideBar from \"../SideBar/SideBar\";\r\nimport ShareIcons from \"../ShareIcons/ShareIcons\";\r\nimport Drawer from \"src/components/Drawer/Drawer\";\r\n\r\nconst width = 250;\r\n\r\nconst useStyles = makeStyles()((theme: Theme) => ({\r\n  root: {\r\n    position: \"relative\",\r\n    height: \"100vh\",\r\n    width: '100%',\r\n  },\r\n  bodyWrapper: {\r\n    height: \"calc(100vh - 100px)\",\r\n    width: `calc(100vw - ${250}px)`,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    \r\n    \"& #drawer\": {\r\n      display: \"none\",\r\n      zIndex: 100\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      \"& #drawer\": {\r\n        display: \"initial\",\r\n        // overflowY: \"scroll\",\r\n      },\r\n      height: \"auto\",\r\n      width: \"100%\",\r\n      overflowY: \"hidden\",\r\n      left: 0,\r\n      borderBottomLeftRadius: 0,\r\n    },\r\n  },\r\n  iconsContainer: {\r\n    position: \"absolute\",\r\n    bottom: 50,\r\n    left: '3%',\r\n  },\r\n  sideWrapper: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: 'none'\r\n    }\r\n  }\r\n}));\r\n\r\ninterface Props {}\r\n\r\nconst AppContainer: React.FC<Props> = () => {\r\n  const { classes } = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.sideWrapper} style={{ width: width }}>\r\n        <SideBar />\r\n      <div className={classes.iconsContainer}>\r\n        <ShareIcons />\r\n      </div>\r\n      </div>\r\n      <div className={classes.bodyWrapper}>\r\n        <Drawer />\r\n        <Body />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppContainer;\r\n","import { UtilsProvider } from \"@react-dapp/utils\";\r\nimport { useEagerConnect, useWallet } from \"@react-dapp/wallet\";\r\nimport \"./App.css\";\r\nimport AppContainer from \"./components/AppContainer/AppContainer\";\r\nimport { DashboardInfoContextProvider } from \"./context/DashboardInfoContext\";\r\n\r\nfunction App() {\r\n  const { library } = useWallet();\r\n  useEagerConnect(true);\r\n  return (\r\n    <div>\r\n      <UtilsProvider\r\n        config={{\r\n          provider: library,\r\n          rpcUrl: \"https://bsc-dataseed.binance.org/\",\r\n          wrappedNative: {\r\n            address: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\r\n            symbol: \"WBNB\",\r\n            name: \"WBNB\",\r\n            decimals: 18,\r\n          },\r\n          usd: {\r\n            address: \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\r\n            name: \"BUSD\",\r\n            symbol: \"BUSD\",\r\n            decimals: 18,\r\n          },\r\n          nativeUsdLp: {\r\n            name: \"LP\",\r\n            address: \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\",\r\n            symbol: \"LP\",\r\n            decimals: 18,\r\n          },\r\n        }}\r\n      >\r\n        <DashboardInfoContextProvider>\r\n          <AppContainer />\r\n        </DashboardInfoContextProvider>\r\n      </UtilsProvider>\r\n      {/* <BurgerMenu /> */}\r\n      {/* <SocialShare /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme, responsiveFontSizes  } from \"@mui/material\";\r\n\r\ndeclare module \"@mui/material/Typography\" {\r\n  interface TypographyPropsVariantOverrides {\r\n    thin: true;\r\n  }\r\n}\r\n\r\nconst primaryColor = \"#CF165D\";\r\nconst secondaryColor=\"#FE72DE\"\r\nconst bgColor = \"linear-gradient(90deg, #410D48, #8D174F, #E02256)\";\r\n\r\nlet theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n    secondary: {\r\n      main: secondaryColor,\r\n    },\r\n    text: {\r\n      primary: \"#fff\",\r\n    },\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 900,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: 'LondrinaSolid',\r\n  },\r\n  components: {\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: \"white\",\r\n          padding: 0,\r\n          minWidth: 20,\r\n          textTransform: \"none\",\r\n\r\n          \"&:hover\": {\r\n            boxShadow: \"1px 1px 4px 1px rgba(255,255,255,0.4)\",\r\n            border: 'none',\r\n          }\r\n        },\r\n        contained: {\r\n          background: '#FE72DE',\r\n          borderRadius: 12,\r\n\r\n          \"&:hover\": {\r\n            background: secondaryColor,\r\n          }\r\n        },\r\n        outlined: {\r\n          boxShadow: '1px 1px 7px 2px rgba(255,255,255, 0.4)',\r\n          border: 'none',\r\n        }\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: \"thin\" },\r\n          style: {\r\n            fontFamily: \"LondrinaSolidThin\",\r\n            fontWeight: 100,\r\n          },\r\n        },\r\n        {\r\n          props: { variant: \"h4\" },\r\n          style: {\r\n            fontFamily: \"LondrinaSolidThin\",\r\n            fontWeight: 100,\r\n          }\r\n        }\r\n      ],\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          background: \"white\",\r\n          \"& svg\": {\r\n            fill: primaryColor,\r\n          },\r\n          \"&:hover\": {\r\n            \"& svg\": {\r\n              fill: \"white\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          padding: 16,\r\n          background: 'transparent',\r\n          boxShadow: '1px 1px 7px 2px rgba(255,255,255, 0.4)',\r\n          borderWidth: \"1px\",\r\n          borderColor: 'none',\r\n          borderRadius: 12,\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: \"outlined\" },\r\n          style: {\r\n            background: primaryColor,\r\n            borderColor: \"white\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiDrawer: {\r\n      styleOverrides: {\r\n        paper: {\r\n          background: bgColor,\r\n          width: 250,\r\n        },\r\n      },\r\n    },\r\n    MuiSvgIcon: {\r\n      styleOverrides: {\r\n        colorPrimary: {\r\n          fill: primaryColor,\r\n        },\r\n      },\r\n    },\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"& div\": {\r\n            height: 48,\r\n          },\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: \"outlined\" },\r\n          style: {\r\n            \"& input\": {\r\n              fontWeight: 400,\r\n              fontFamily: \"LondrinaSolid\",\r\n              zIndex: 100,              \r\n            },\r\n            \"& fieldset\": {\r\n              borderRadius: 12,\r\n              backgroundColor: secondaryColor,\r\n            },\r\n          },\r\n        \r\n        },\r\n      ],\r\n    },\r\n    MuiSlider: {\r\n      styleOverrides: {\r\n        thumbColorPrimary: {\r\n          background: 'white',\r\n          border: `4px solid ${secondaryColor}`\r\n        },\r\n        track: {\r\n          background: secondaryColor,\r\n          border: \"white\",\r\n        },\r\n        rail: {\r\n          background: \"transparent\",\r\n          height: 9,\r\n          border: \"2px solid white\",\r\n        },\r\n        valueLabel: {\r\n          background: \"none\",\r\n          fontWeight: 300,\r\n          fontSize: \"1.2rem\",\r\n        },\r\n      },\r\n    },\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        \"::-webkit-scrollbar\": {\r\n          width: 0,\r\n        },\r\n        \"::-webkit-scrollbar-track\": {\r\n          background: \"transparent\",\r\n        },\r\n        \"::-webkit-scrollbar-thumb\": {\r\n          background: primaryColor,\r\n        },\r\n        a: {\r\n          textDecoration: \"none\",\r\n          color: \"inherit\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme)\r\n\r\nexport default theme;\r\n","export default __webpack_public_path__ + \"static/media/LondrinaSolid-Black.f843e880.ttf\";","export default __webpack_public_path__ + \"static/media/LondrinaSolid-Thin.41e993df.ttf\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport theme from \"./utils/theme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport { StyledEngineProvider } from \"@mui/material/styles\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport \"./assets/fonts/LondrinaSolid-Black.ttf\";\r\nimport \"./assets/fonts/LondrinaSolid-Thin.ttf\";\r\nimport { WalletProvider } from \"@react-dapp/wallet\";\r\nimport { CURRENT_CHAIN_ID } from \"./config/config\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* @ts-ignore */}\r\n    <WalletProvider config={{ chainId: CURRENT_CHAIN_ID }}>\r\n      <BrowserRouter>\r\n        <StyledEngineProvider injectFirst>\r\n          <ThemeProvider theme={theme}>\r\n            <App />\r\n            <CssBaseline />\r\n          </ThemeProvider>\r\n        </StyledEngineProvider>\r\n      </BrowserRouter>\r\n    </WalletProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}